{"version":3,"sources":["Api.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","apis","getPonto","ponto","post","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","pontos","HorasTrabalhadas","MinutosTrabalhados","menu","bind","assertThisInitialized","listPoint","value","totalWidth","paddingChar","length","toString","Array","join","str","split","reduce","p","c","_this2","matricula","refs","data","date","then","res","console","log","horaIni","horaFin","segundosIni","segundosFin","horas","minutos","batida","segundosTotal","i","j","_unused","dateFormat","Date","parseInt","entrada","saida","setState","_this3","react_default","a","createElement","className","href","src","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","class","leftPad","ref","placeholder","onClick","role","Fragment","map","Component","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0193b8f3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://10.2.24.144:8080'\r\n})\r\n\r\nconst getPonto = (ponto) => api.post('points', ponto)\r\n\r\nconst apis = {\r\n    getPonto\r\n}\r\n\r\nexport default apis\r\n","import React, { Component } from 'react'\r\nimport convert from 'xml-js'\r\nimport dateFormat from 'dateformat'\r\nimport axios from 'axios'\r\n\r\nimport api from './Api'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            pontos: [],\r\n            HorasTrabalhadas: 0,\r\n            MinutosTrabalhados: 0\r\n        }   \r\n        this.menu = this.menu.bind(this)\r\n        this.listPoint = this.listPoint.bind(this)\r\n    }  \r\n    componentDidMount(){\r\n        this.getPonto()\r\n    }\r\n    leftPad(value, totalWidth, paddingChar){\r\n        var length = totalWidth - value.toString().length + 1;\r\n        return Array(length).join(paddingChar || '0') + value;\r\n    } \r\n    date(str){ \r\n        return str.split(\"-\").reduce(function(p, c){ return c + \"/\" +p })\r\n    }\r\n    getPonto(){\r\n        const ponto = {\r\n            'matricula': this.refs.matricula.value,\r\n\t        'data': this.date(this.refs.data.value)\r\n        }\r\n        api.getPonto(ponto).then((res) => {\r\n            console.log(res.data)\r\n            if(res.data !== ''){\r\n                const ponto = res.data.split(';')\r\n\r\n                let batida = 1, horaIni, horaFin, segundosIni, segundosFin, horas, minutos, segundosTotal = 0\r\n                const p = []\r\n                for(let i = 0, j = 0; i < ponto.length-1; i=i+6, j++) {\r\n                     \r\n                    horaIni = ponto[i+1].split(':')\r\n                    try{\r\n                        horaFin = ponto[i+4].split(':')\r\n                        console.log('try')\r\n                    }catch{\r\n                        const aux = dateFormat(new Date(), 'HH:MM')\r\n                        horaFin = aux.split(':')\r\n                    }\r\n\r\n                    segundosIni = (parseInt(horaIni[0] == \"00\"?\"24\":horaIni[0])*3600)+(parseInt(horaIni[1])*60)\r\n                    segundosFin = (parseInt(horaFin[0] == \"00\"?\"24\":horaFin[0])*3600)+(parseInt(horaFin[1])*60)\r\n                    \r\n                    horas = parseInt(((segundosIni > segundosFin) ? segundosIni - segundosFin : segundosFin - segundosIni) / 3600)\r\n                    minutos = parseInt((((segundosIni > segundosFin) ? segundosIni - segundosFin : segundosFin - segundosIni) % 3600) / 60)\r\n\r\n                    segundosTotal = segundosTotal + (horas*3600)+(minutos*60)\r\n\r\n                    p[j] = {\r\n                        entrada: ponto[i+1],\r\n                        saida: ponto[i+4],\r\n                        batida,\r\n                        horas,\r\n                        minutos\r\n                    }\r\n                    batida++\r\n                } \r\n                this.setState({ \r\n                    pontos: p,\r\n                    HorasTrabalhadas: parseInt(segundosTotal / 3600),\r\n                    MinutosTrabalhados: parseInt((segundosTotal % 3600) / 60),\r\n                    isLoading: false                   \r\n                })                \r\n            }else{\r\n                this.setState({ \r\n                    pontos: [],\r\n                    HorasTrabalhadas: '00',\r\n                    MinutosTrabalhados: '00',\r\n                    isLoading: true                   \r\n                })  \r\n            }\r\n                    \r\n        })\r\n    }\r\n    menu(){\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n              <a className=\"navbar-brand\" href=\"#\"><img src='images/logo.png' width='200' /></a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n            \r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\"><h5><span class=\"badge badge-secondary\">Horas trabalhadas: {this.leftPad(this.state.HorasTrabalhadas, 2)}:{this.leftPad(this.state.MinutosTrabalhados, 2)} </span></h5></a>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"form-inline my-2 my-lg-0 form-group\" >\r\n                  <label>Matr√≠cula: </label>\r\n                  <input ref='matricula' className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"\" aria-label=\"Search\"/>\r\n                  <label>Data: </label>\r\n                  <input ref='data' className=\"form-control mr-sm-2\" type=\"date\" placeholder=\"\" aria-label=\"Data\" />\r\n                  <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={() => this.getPonto()}>Verificar</button>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n        )\r\n    }\r\n    listPoint(value){\r\n        return(                            \r\n            <div className=\"card  col-md-8 offset-md-2\">\r\n                <div className=\"card-header bg-transparent\">Batida {value.batida}</div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"alert alert-primary\" role=\"alert\">\r\n                        <p className='font-weight-bold'>Entrada: {value.entrada}  </p>\r\n                        <p className='font-weight-bold'>Sa√≠da: {value.saida} </p>\r\n                        <p className='font-weight-bold'>Perman√™ncia: {this.leftPad(value.horas, 2)}:{this.leftPad(value.minutos, 2)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <>                \r\n                {this.menu()}    \r\n                <div className='row row-content'>        \r\n                { !this.state.isLoading && this.state.pontos.map(this.listPoint)}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n\r\n} from 'react-router-dom'\r\n\r\nimport Home from './Home'\r\n//functional-stateless-component\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (   \r\n        <Router>     \r\n          <div>\r\n            <Route exact path='/' component={Home} />                \r\n          </div>   \r\n        </Router>       \r\n      )\r\n    }\r\n  \r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}